{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview AOK is modern blockchain platform designed for token creation, transfer and exchange. Key features While being based on Bitcoin it utilises Proof-of-Stake and native token cration protocol which allow peoples to exchange tokens between each other using atomic swaps.","title":"Overview"},{"location":"#overview","text":"AOK is modern blockchain platform designed for token creation, transfer and exchange.","title":"Overview"},{"location":"#key-features","text":"While being based on Bitcoin it utilises Proof-of-Stake and native token cration protocol which allow peoples to exchange tokens between each other using atomic swaps.","title":"Key features"},{"location":"atomic/","text":"Atomic swaps Or, trading apples for bananas. The Problem Andy has some apples. Barb has some bananas. Andy agrees to give Barb two apples in exchange for one banana. In order to make sure both parties hold up their end of the deal they need to create a single transaction that sends assets both directions. The Inputs We'll need to find 3 UTXOs to use as inputs. Andy's apples, Barb's bananas and some AOK to pay the network fee (Andy will pay). Andy uses listunspent to find a suitable txid and vout : \ufeff{ \"txid\": \"631cf1566165803f0b89fbfb169d8f0c89129ec3f8536a48e4c4f0f3c4081cff\", \"vout\": 0, \"address\": \"mh8mmbCPqnxCNqJq547NG99pauTHqvvYjA\", \"scriptPubKey\": \"21027e1fde02d2cbfac3629aeaf669abd156d0c4dfbf52f6a5e4dd6664e81a621045ac\", \"amount\": 4.88281250, \"confirmations\": 3088, \"spendable\": true, \"solvable\": true, \"safe\": true } Then each party uses listmyassets with verbose=true to find asset UTXOs: Andy: listmyassets APPLES true : { \"APPLES\": { \"balance\": 1000, \"outpoints\": [ { \"txid\": \"744c61abe6d237939c3567bc44b912ff4c375984229908c964be44f36dec79e3\", \"vout\": 3, \"amount\": 1000 } ] } } Barb: listmyassets BANANAS true : { \"BANANAS\": { \"balance\": 1000, \"outpoints\": [ { \"txid\": \"8468ef5193b1f5d6a7bd501f5f8ef5aec7c3d86fa87cec5a0b6f6d86fba78a4f\", \"vout\": 3, \"amount\": 1000 } ] } } Extracting the txids and vouts gives us our raw inputs: '[{\"txid\":\"631cf1566165803f0b89fbfb169d8f0c89129ec3f8536a48e4c4f0f3c4081cff\",\"vout\":0}, \\ {\"txid\":\"744c61abe6d237939c3567bc44b912ff4c375984229908c964be44f36dec79e3\",\"vout\":3}, \\ {\"txid\":\"8468ef5193b1f5d6a7bd501f5f8ef5aec7c3d86fa87cec5a0b6f6d86fba78a4f\",\"vout\":3}]' The Outputs We'll be using 5 new AOK addresses: Andy's Raven change address: KZzymtqctNdW4fWhLdWKRYUDGXP3KzG8Y9 Andy's banana receive address: KiNMHYArytp2D6jQSPHrGd7rq3qAxvpdt5 Barb's banana change address: KdahQMGWTJgFjziWadqejMU7gYAvpumzkk Barb's apple receive address: KtPia5TPzjw1XibYh3de3RKxcpq9gusCBu Andy's apple change address: KeW8oMzwyQZbgME9Tm633TDRV8bW347tEM All asset transfers have to be balanced. Since we have 1000 APPLES coming in, we have to have 1000 going out. So Andy will send 2 to Barb's receive address and the rest (998) to his change address. The AOK will pay 0.001 for the network fee as normal. '{\"KZzymtqctNdW4fWhLdWKRYUDGXP3KzG8Y9\":4.8827125, \\ \"KiNMHYArytp2D6jQSPHrGd7rq3qAxvpdt5\":{\"transfer\":{\"BANANAS\":1}}, \\ \"KdahQMGWTJgFjziWadqejMU7gYAvpumzkk\":{\"transfer\":{\"BANANAS\":999}}, \\ \"KtPia5TPzjw1XibYh3de3RKxcpq9gusCBu\":{\"transfer\":{\"APPLES\":2}}, \\ \"KeW8oMzwyQZbgME9Tm633TDRV8bW347tEM\":{\"transfer\":{\"APPLES\":998}}}' Creating The Transaction Andy can now use createrawtransaction , passing in the inputs and outputs and receiving the transaction hex: createrawtransaction '[{\"txid\":\"631cf1566165803f0b89fbfb169d8f0c89129ec3f8536a48e4c4f0f3c4081cff\",\"vout\":0},{\"txid\":\"744c61abe6d237939c3567bc44b912ff4c375984229908c964be44f36dec79e3\",\"vout\":3},{\"txid\":\"8468ef5193b1f5d6a7bd501f5f8ef5aec7c3d86fa87cec5a0b6f6d86fba78a4f\",\"vout\":3}]' '{\"KZzymtqctNdW4fWhLdWKRYUDGXP3KzG8Y9\":4.8827125,\"KiNMHYArytp2D6jQSPHrGd7rq3qAxvpdt5\":{\"transfer\":{\"BANANAS\":1}},\"KdahQMGWTJgFjziWadqejMU7gYAvpumzkk\":{\"transfer\":{\"BANANAS\":999}},\"KtPia5TPzjw1XibYh3de3RKxcpq9gusCBu\":{\"transfer\":{\"APPLES\":2}},\"KeW8oMzwyQZbgME9Tm633TDRV8bW347tEM\":{\"transfer\":{\"APPLES\":998}}}' 0200000003ff1c08c4f3f0c4e4486a53f8c39e12890c8f9d16fbfb890b3f80656156f11c630000000000ffffffffe379ec6df344be64c90899228459374cff12b944bc67359c9337d2e6ab614c740300000000ffffffff4f8aa7fb866d6f0b5aec7ca86fd8c3c7aef58e5f1f50bda7d6f5b19351ef68840300000000ffffffff05926d1a1d000000001976a914a1d62b4f8a6710ad43d56f656c27966513ae8fbf88ac00000000000000003076a91483b7a59ce25d8159fdc2ab70320512d2bc07a1c488acc01472766e740742414e414e415300e1f505000000007500000000000000003076a91430f446c2ac37dc072516603e44e86aea7af2bf6788acc01472766e740742414e414e415300078142170000007500000000000000002f76a914cf084a93cf87d3030b74a1939d9c8f02f6152c8c88acc01372766e74064150504c455300c2eb0b000000007500000000000000002f76a914d18967e005ff7208cc6a9c483b028c7c72ca2d6e88acc01372766e74064150504c455300268b3c170000007500000000 Signing The Transaction Ok, the structure of the transaction is set. Now each party needs to sign it in order to unlock the inputs. Here are the steps: Andy signs it using signrawtransaction . This will alter the hex, using his wallet to insert the signatures. Note: Since Andy doesn't have the keys for all of the inputs he will see an error: \"Unable to sign input, invalid stack size (possibly missing key)\" This is normal and expected. Andy sends the signed hex to Barb. Barb uses signrawtransaction to sign the rest of the inputs. Again capture the hex output. Submit The Transaction Almost there. Barb now passes the fully signed hex to sendrawtransaction ! It will be communicated to the network and put into the next block.","title":"Atomic swaps"},{"location":"atomic/#atomic-swaps","text":"Or, trading apples for bananas.","title":"Atomic swaps"},{"location":"atomic/#the-problem","text":"Andy has some apples. Barb has some bananas. Andy agrees to give Barb two apples in exchange for one banana. In order to make sure both parties hold up their end of the deal they need to create a single transaction that sends assets both directions.","title":"The Problem"},{"location":"atomic/#the-inputs","text":"We'll need to find 3 UTXOs to use as inputs. Andy's apples, Barb's bananas and some AOK to pay the network fee (Andy will pay). Andy uses listunspent to find a suitable txid and vout : \ufeff{ \"txid\": \"631cf1566165803f0b89fbfb169d8f0c89129ec3f8536a48e4c4f0f3c4081cff\", \"vout\": 0, \"address\": \"mh8mmbCPqnxCNqJq547NG99pauTHqvvYjA\", \"scriptPubKey\": \"21027e1fde02d2cbfac3629aeaf669abd156d0c4dfbf52f6a5e4dd6664e81a621045ac\", \"amount\": 4.88281250, \"confirmations\": 3088, \"spendable\": true, \"solvable\": true, \"safe\": true } Then each party uses listmyassets with verbose=true to find asset UTXOs: Andy: listmyassets APPLES true : { \"APPLES\": { \"balance\": 1000, \"outpoints\": [ { \"txid\": \"744c61abe6d237939c3567bc44b912ff4c375984229908c964be44f36dec79e3\", \"vout\": 3, \"amount\": 1000 } ] } } Barb: listmyassets BANANAS true : { \"BANANAS\": { \"balance\": 1000, \"outpoints\": [ { \"txid\": \"8468ef5193b1f5d6a7bd501f5f8ef5aec7c3d86fa87cec5a0b6f6d86fba78a4f\", \"vout\": 3, \"amount\": 1000 } ] } } Extracting the txids and vouts gives us our raw inputs: '[{\"txid\":\"631cf1566165803f0b89fbfb169d8f0c89129ec3f8536a48e4c4f0f3c4081cff\",\"vout\":0}, \\ {\"txid\":\"744c61abe6d237939c3567bc44b912ff4c375984229908c964be44f36dec79e3\",\"vout\":3}, \\ {\"txid\":\"8468ef5193b1f5d6a7bd501f5f8ef5aec7c3d86fa87cec5a0b6f6d86fba78a4f\",\"vout\":3}]'","title":"The Inputs"},{"location":"atomic/#the-outputs","text":"We'll be using 5 new AOK addresses: Andy's Raven change address: KZzymtqctNdW4fWhLdWKRYUDGXP3KzG8Y9 Andy's banana receive address: KiNMHYArytp2D6jQSPHrGd7rq3qAxvpdt5 Barb's banana change address: KdahQMGWTJgFjziWadqejMU7gYAvpumzkk Barb's apple receive address: KtPia5TPzjw1XibYh3de3RKxcpq9gusCBu Andy's apple change address: KeW8oMzwyQZbgME9Tm633TDRV8bW347tEM All asset transfers have to be balanced. Since we have 1000 APPLES coming in, we have to have 1000 going out. So Andy will send 2 to Barb's receive address and the rest (998) to his change address. The AOK will pay 0.001 for the network fee as normal. '{\"KZzymtqctNdW4fWhLdWKRYUDGXP3KzG8Y9\":4.8827125, \\ \"KiNMHYArytp2D6jQSPHrGd7rq3qAxvpdt5\":{\"transfer\":{\"BANANAS\":1}}, \\ \"KdahQMGWTJgFjziWadqejMU7gYAvpumzkk\":{\"transfer\":{\"BANANAS\":999}}, \\ \"KtPia5TPzjw1XibYh3de3RKxcpq9gusCBu\":{\"transfer\":{\"APPLES\":2}}, \\ \"KeW8oMzwyQZbgME9Tm633TDRV8bW347tEM\":{\"transfer\":{\"APPLES\":998}}}'","title":"The Outputs"},{"location":"atomic/#creating-the-transaction","text":"Andy can now use createrawtransaction , passing in the inputs and outputs and receiving the transaction hex: createrawtransaction '[{\"txid\":\"631cf1566165803f0b89fbfb169d8f0c89129ec3f8536a48e4c4f0f3c4081cff\",\"vout\":0},{\"txid\":\"744c61abe6d237939c3567bc44b912ff4c375984229908c964be44f36dec79e3\",\"vout\":3},{\"txid\":\"8468ef5193b1f5d6a7bd501f5f8ef5aec7c3d86fa87cec5a0b6f6d86fba78a4f\",\"vout\":3}]' '{\"KZzymtqctNdW4fWhLdWKRYUDGXP3KzG8Y9\":4.8827125,\"KiNMHYArytp2D6jQSPHrGd7rq3qAxvpdt5\":{\"transfer\":{\"BANANAS\":1}},\"KdahQMGWTJgFjziWadqejMU7gYAvpumzkk\":{\"transfer\":{\"BANANAS\":999}},\"KtPia5TPzjw1XibYh3de3RKxcpq9gusCBu\":{\"transfer\":{\"APPLES\":2}},\"KeW8oMzwyQZbgME9Tm633TDRV8bW347tEM\":{\"transfer\":{\"APPLES\":998}}}' 0200000003ff1c08c4f3f0c4e4486a53f8c39e12890c8f9d16fbfb890b3f80656156f11c630000000000ffffffffe379ec6df344be64c90899228459374cff12b944bc67359c9337d2e6ab614c740300000000ffffffff4f8aa7fb866d6f0b5aec7ca86fd8c3c7aef58e5f1f50bda7d6f5b19351ef68840300000000ffffffff05926d1a1d000000001976a914a1d62b4f8a6710ad43d56f656c27966513ae8fbf88ac00000000000000003076a91483b7a59ce25d8159fdc2ab70320512d2bc07a1c488acc01472766e740742414e414e415300e1f505000000007500000000000000003076a91430f446c2ac37dc072516603e44e86aea7af2bf6788acc01472766e740742414e414e415300078142170000007500000000000000002f76a914cf084a93cf87d3030b74a1939d9c8f02f6152c8c88acc01372766e74064150504c455300c2eb0b000000007500000000000000002f76a914d18967e005ff7208cc6a9c483b028c7c72ca2d6e88acc01372766e74064150504c455300268b3c170000007500000000","title":"Creating The Transaction"},{"location":"atomic/#signing-the-transaction","text":"Ok, the structure of the transaction is set. Now each party needs to sign it in order to unlock the inputs. Here are the steps: Andy signs it using signrawtransaction . This will alter the hex, using his wallet to insert the signatures. Note: Since Andy doesn't have the keys for all of the inputs he will see an error: \"Unable to sign input, invalid stack size (possibly missing key)\" This is normal and expected. Andy sends the signed hex to Barb. Barb uses signrawtransaction to sign the rest of the inputs. Again capture the hex output.","title":"Signing The Transaction"},{"location":"atomic/#submit-the-transaction","text":"Almost there. Barb now passes the fully signed hex to sendrawtransaction ! It will be communicated to the network and put into the next block.","title":"Submit The Transaction"},{"location":"daemon/","text":"Full node The purpose of this document is to describe the process of setting up AOK full node and command line wallet. Getting started AOK software runs on all operating systems: Linux, Mac OS and Windows. You can get latest binaries from here or build it on your own using code from master branch. Once you downloaded and extracted latest binaries at your machine, you will see two binaries: aokchaind - headless AOK daemon responsible for syncing blockchain and providing wallet service aokchain-cli - command line client which allows interact with AOK node and wallet Running node Hint You can secure your full node by specifying rpcuser and rpcpassword in ~/.aokchain/aokchain.conf file. Running AOK node pretty straightforward, you can use -printtoconsole flag to see the output or use -daemon to run it in headless daemon mode. Those flags can be specified in conf file as well. ./aokchaind -daemon Stopping node If you launched AOK node in daemon mode, it can be stopped using cli utility like this: aokchain-cli stop","title":"Full node"},{"location":"daemon/#full-node","text":"The purpose of this document is to describe the process of setting up AOK full node and command line wallet.","title":"Full node"},{"location":"daemon/#getting-started","text":"AOK software runs on all operating systems: Linux, Mac OS and Windows. You can get latest binaries from here or build it on your own using code from master branch. Once you downloaded and extracted latest binaries at your machine, you will see two binaries: aokchaind - headless AOK daemon responsible for syncing blockchain and providing wallet service aokchain-cli - command line client which allows interact with AOK node and wallet","title":"Getting started"},{"location":"daemon/#running-node","text":"Hint You can secure your full node by specifying rpcuser and rpcpassword in ~/.aokchain/aokchain.conf file. Running AOK node pretty straightforward, you can use -printtoconsole flag to see the output or use -daemon to run it in headless daemon mode. Those flags can be specified in conf file as well. ./aokchaind -daemon","title":"Running node"},{"location":"daemon/#stopping-node","text":"If you launched AOK node in daemon mode, it can be stopped using cli utility like this: aokchain-cli stop","title":"Stopping node"},{"location":"desktop/","text":"Desktop wallet You can get latest desktop wallet from here or build it on your own using code from master branch. AOK QT wallet runs on all operating systems: Linux, Mac OS and Windows. First thing you will see after opening wallet is splash screen: During first run wallet must synchronize AOK blockchain, it may take 5-10 minutes: Once synchronization is done, you will be presented with overview screen where your AOK, tokens and history will be displayed: You can send your AOK coins via send screen: New address can be created at receive screen: At transactions screen you can check your history of transfers: Tokens can be transfered at token transfer screen:","title":"Desktop wallet"},{"location":"desktop/#desktop-wallet","text":"You can get latest desktop wallet from here or build it on your own using code from master branch. AOK QT wallet runs on all operating systems: Linux, Mac OS and Windows. First thing you will see after opening wallet is splash screen: During first run wallet must synchronize AOK blockchain, it may take 5-10 minutes: Once synchronization is done, you will be presented with overview screen where your AOK, tokens and history will be displayed: You can send your AOK coins via send screen: New address can be created at receive screen: At transactions screen you can check your history of transfers: Tokens can be transfered at token transfer screen:","title":"Desktop wallet"},{"location":"mobile/","text":"Mobile wallet","title":"Mobile wallet"},{"location":"mobile/#mobile-wallet","text":"","title":"Mobile wallet"},{"location":"rpc/","text":"Json RPC This document outlines important rpc methods which can be used for AOK integration into exchanges or other services. Network This methods can be used to get general information about the network. getblockchaininfo - returns info about blockchain { \"chain\": \"main\", \"blocks\": 271823, \"headers\": 271823, \"bestblockhash\": \"e4bc6d4b818792a1fb2c57c08454099c4ebf1fcd2f23490573e0260918193b89\", \"difficulty\": 0.002555948098984594, \"mediantime\": 1608143056, \"verificationprogress\": 1, \"chainwork\": \"0000000000000000000000000000000000000000000001f22354cf302a1790ec\", \"size_on_disk\": 417448998, \"pruned\": 0, \"softforks\": [ ], \"bip9_softforks\": { }, \"warnings\": \"\" } getblockhash <height> - returns block hash 0012eb05991b2ee8d074fde6c03089d2517937e28adc4219f0a4742b7805be96 getblock <hash> - returns block information { \"hash\": \"0012eb05991b2ee8d074fde6c03089d2517937e28adc4219f0a4742b7805be96\", \"confirmations\": 271835, \"strippedsize\": 231, \"size\": 231, \"weight\": 924, \"height\": 1, \"version\": 536870912, \"versionHex\": \"20000000\", \"merkleroot\": \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\", \"tx\": [ \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\" ], \"time\": 1589880735, \"mediantime\": 1589880735, \"nonce\": 284, \"bits\": \"1f3fffff\", \"difficulty\": 2.384149979653205e-07, \"chainwork\": \"0000000000000000000000000000000000000000000000000000000000000800\", \"previousblockhash\": \"000c513d39b0e3657b7b0ca79b2d4b9b18c1f03dacb394acf0e71f49064b3306\", \"nextblockhash\": \"003c074613108695565ea4e76957a346038ff7aa12ab951af3508398bb9b23fd\", \"flags\": \"proof-of-work\", \"modifier\": \"d2ec909dc48208a3a4d92162c14d116b48e27c7cb579f1c3cb4573e1b5c2d4ac\" } Transactions This methods can be used to get information about transactions. getrawtransaction <hash> <verbose> - returns information about transaction (set verbose to true for json output) { \"txid\": \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\", \"hash\": \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\", \"version\": 1, \"timestamp\": 1589880735, \"size\": 149, \"vsize\": 149, \"locktime\": 0, \"vin\": [ { \"coinbase\": \"510101\", \"sequence\": 4294967295 } ], \"vout\": [ { \"value\": 2100000000, \"n\": 0, \"scriptPubKey\": { \"asm\": \"03131079e6248a288fcf9daf9828f09544e3f853e870afc651efdb0ca9298059ab OP_CHECKSIG\", \"hex\": \"2103131079e6248a288fcf9daf9828f09544e3f853e870afc651efdb0ca9298059abac\", \"reqSigs\": 1, \"type\": \"pubkey\", \"addresses\": [ \"KrbwDveomVrY4fNH5GrHU52A2HqpzgmCkG\" ] }, \"spentTxId\": \"df766dc83db4a93857cb3076bd043ea06138526e282744ad63a478eaa6bb0662\", \"spentIndex\": 0, \"spentHeight\": 12, \"valueSat\": 210000000000000000 }, { \"value\": 0, \"n\": 1, \"scriptPubKey\": { \"asm\": \"OP_RETURN aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf9\", \"hex\": \"6a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf9\", \"type\": \"nulldata\" }, \"valueSat\": 0 } ], \"hex\": \"010000009fa7c35e010000000000000000000000000000000000000000000000000000000000000000ffffffff03510101ffffffff020000d52ae311ea02232103131079e6248a288fcf9daf9828f09544e3f853e870afc651efdb0ca9298059abac0000000000000000266a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf900000000\", \"blockhash\": \"0012eb05991b2ee8d074fde6c03089d2517937e28adc4219f0a4742b7805be96\", \"height\": 1, \"confirmations\": 271841, \"time\": 1589880735, \"blocktime\": 1589880735 } getchaintxstats - returns statistics about the total number and rate of transactions in the chain { \"time\": 1608144544, \"txcount\": 1271608, \"window_block_count\": 40500, \"window_tx_count\": 246854, \"window_interval\": 2724352, \"txrate\": 0.09061017078556663 } Wallet This methods can be used to get information about wallet. getbalance - returns entite AOK balance of your wallet 0.00000000 listmytokens - returns list of all tokens your wallet is holding { \"CCA\": 984.00000000 } getnewaddress <label> - returns new address and assign label if it was set KpmtABZnYx2qxJwu4wSmRSsEuJ6NwJFd5S listtransactions <label> <count> <skip> - returns list of last transactions for given label (use * to get list of all incoming transactions) [ { \"account\": \"testlabel\", \"token_type\": \"transfer_token\", \"token_name\": \"CCA\", \"amount\": 45.48900000, \"address\": \"KqFZpfbZ6kFFWqg22jv3cBES8o4KwCERmW\", \"vout\": 0, \"category\": \"receive\", \"blockhash\": \"3b816b7cb73c98ad22e4673f900eb2f6a9a0a15692227769ab3dc95d301f8ec4\", \"blockindex\": 2, \"blocktime\": 1607785696, \"txid\": \"cacf4bf3dcc43fbe6a76ff7d9f6b4625cda409538928cc9c89881305db95e5d5\", \"confirmations\": 5510, \"walletconflicts\": [ ], \"time\": 1607785660, \"timereceived\": 1607785660 }, { \"account\": \"testlabel\", \"token_type\": \"transfer_token\", \"token_name\": \"CCA\", \"amount\": 45.51290000, \"address\": \"KqFZpfbZ6kFFWqg22jv3cBES8o4KwCERmW\", \"vout\": 0, \"category\": \"receive\", \"blockhash\": \"22b5cebcae8a6c3fa3ccf4acd67293ae42b2273e606e97dd9d4be751afa9df9c\", \"blockindex\": 2, \"blocktime\": 1607879552, \"txid\": \"61f7fcea979aec1a9b8812f36e75589ea2b9d4f3ad168b4e1d2e9a00d6206796\", \"confirmations\": 4115, \"walletconflicts\": [ ], \"time\": 1607879552, \"timereceived\": 1607879552 }, { \"account\": \"testlabel\", \"token_type\": \"transfer_token\", \"token_name\": \"CCA\", \"amount\": 45.53510000, \"address\": \"KqFZpfbZ6kFFWqg22jv3cBES8o4KwCERmW\", \"vout\": 0, \"category\": \"receive\", \"blockhash\": \"e9f844b193a3e75eb60c95b5ab2db7eb51368307c6fa55cf859bd9a860c0505a\", \"blockindex\": 2, \"blocktime\": 1607964192, \"txid\": \"d16972d5f1b578e143e9cc93f33cefec8eb52926b588d14e425ba9dceef434a4\", \"confirmations\": 2854, \"walletconflicts\": [ ], \"time\": 1607964141, \"timereceived\": 1607964141 } ] sendtoaddress <address> <amount> <locktime> - sends specified amount of AOK to address with locktime (if it was set) d16972d5f1b578e143e9cc93f33cefec8eb52926b588d14e425ba9dceef434a4 sendmany \"*\" <recepients> - sends AOK to multiple recipients (second argument must be set to * ). Recepients is regular JSON object with address as a key and amount as value: {\"KWud4EpNGfSqecAdB3FH6x6wvNfVEL2iMn\": 10} [ \"cacf4bf3dcc43fbe6a76ff7d9f6b4625cda409538928cc9c89881305db95e5d5\" ] transfer <token> <amount> <address> <locktime> - sends specified amount of token to address with locktime (if it was set) [ \"7c9f23b4e8c4df8fa044e19cdadfb1be8cf9a1e38687b4e877978a9747f13780\" ] transfermany <token> <recepients> - sends token to multiple recipients (second argument must be set to * ). Recepients is regular JSON object with address as a key and amount as value: {\"KWud4EpNGfSqecAdB3FH6x6wvNfVEL2iMn\": 10} [ \"61f7fcea979aec1a9b8812f36e75589ea2b9d4f3ad168b4e1d2e9a00d6206796\" ] Tokens This methods can be used to create/update tokens and get related token information. issue <name> <amount> <address> <change_address> <units> <reissuable> - issue token to address (if specified) [ \"94cac36a44021ee3e8cdf7365b34212e588679b927858453a714d4fa97df033a\" ] reissue <name> <amount> <address> <change_address> <reissuable> <units> - reissue token and/or update infromation about it (for example change number of units or reissuability) [ \"0bcd37b40b79608f582a0fb17666f5c639d79acf72e4d5ce25c3726b3f7fea33\" ] listtokens - returns list of all existing tokens [ \"CCA\" ] gettokendata <token> - returns information about tocken { \"name\": \"CCA\", \"amount\": 1000000000.00000000, \"units\": 8, \"reissuable\": 1 } listtokenbalancesbyaddress <address> - return all token balances for specified address { \"CCA\": 45731.24990000 } listaddressesbytoken <token> - returns list of addresses/balances which hold specified token { \"KWbLnN9J9wuPVzkqeTjzq9efRBSxTHJGh2\": 45731.24990000, \"KWhEy59XfADWu5LspUvN9KYbaggTb3thmr\": 5138.96400000, \"KWmyLEGXAxzHLNEuj8wTiXbCzLR4Uaon79\": 10277.92800000, \"KWqDW4apwJi6QsHN3q3h5LMXWw1LgtaWgz\": 3.01100000, \"KWqS79DH5SGqrNGjKVDfHQLGCsBxYKMp4j\": 25522.00000000, \"KWr1m9cry8yhjUzBLhNxbvQsmqc1u7TaWD\": 4079.46780000, \"KWrqLZGi82SJdVukvvcTfRpsmkpCx4fX4K\": 108874.53530000, \"KWswvLxmJJJCBNoVW3U7YNqLDNS7i9d6bx\": 3.00000000, \"KWtUYjQP8BBQwTFgJZebnxoiAqsF11DmXE\": 94700.49149998, \"KWud4EpNGfSqecAdB3FH6x6wvNfVEL2iMn\": 1.00000000, \"KWvmj3GNV4DE8Ms8yuKMGLHZDc88pr8Gzv\": 1000.00000000, \"KWvwTDCqFshmF1Xnqo1yj29TG8GQwyUHg4\": 27703.98720000, \"KWwA5otMB4qCzvFiERcBFj6JdaZ2Vvykv7\": 1000000.00000000, \"KWwKUUoZUw2DbXu7NWfXKySkSUa9WnRqR6\": 12801.75300000, \"KWwufjbDrozt6n5up1vSchveokeoXV9L82\": 221074.64239996, \"KWxemToRTChASMY85KSS8rfHHn4YnuEpbJ\": 8811.66599998, \"KWxrS24CN53HUkGHzZUybHnqC8hzfBH562\": 11.88460509, \"KWzEAcXbh2nqBSjSrV3dYFWATrTxvAGcBh\": 14.00000000, \"KX6LWrCX28etVmwdTaWX6X7J8pxBqLgF3u\": 38128.91369999, \"KX6SfVXJMHSF6e3xrzcGkcpSdu9ETBZtzr\": 127377.29239999, \"KX7BYLcxQpt3CANC3KPL8FaLCRDFDQRdCD\": 27979.77800000, ... }","title":"Json RPC"},{"location":"rpc/#json-rpc","text":"This document outlines important rpc methods which can be used for AOK integration into exchanges or other services.","title":"Json RPC"},{"location":"rpc/#network","text":"This methods can be used to get general information about the network. getblockchaininfo - returns info about blockchain { \"chain\": \"main\", \"blocks\": 271823, \"headers\": 271823, \"bestblockhash\": \"e4bc6d4b818792a1fb2c57c08454099c4ebf1fcd2f23490573e0260918193b89\", \"difficulty\": 0.002555948098984594, \"mediantime\": 1608143056, \"verificationprogress\": 1, \"chainwork\": \"0000000000000000000000000000000000000000000001f22354cf302a1790ec\", \"size_on_disk\": 417448998, \"pruned\": 0, \"softforks\": [ ], \"bip9_softforks\": { }, \"warnings\": \"\" } getblockhash <height> - returns block hash 0012eb05991b2ee8d074fde6c03089d2517937e28adc4219f0a4742b7805be96 getblock <hash> - returns block information { \"hash\": \"0012eb05991b2ee8d074fde6c03089d2517937e28adc4219f0a4742b7805be96\", \"confirmations\": 271835, \"strippedsize\": 231, \"size\": 231, \"weight\": 924, \"height\": 1, \"version\": 536870912, \"versionHex\": \"20000000\", \"merkleroot\": \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\", \"tx\": [ \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\" ], \"time\": 1589880735, \"mediantime\": 1589880735, \"nonce\": 284, \"bits\": \"1f3fffff\", \"difficulty\": 2.384149979653205e-07, \"chainwork\": \"0000000000000000000000000000000000000000000000000000000000000800\", \"previousblockhash\": \"000c513d39b0e3657b7b0ca79b2d4b9b18c1f03dacb394acf0e71f49064b3306\", \"nextblockhash\": \"003c074613108695565ea4e76957a346038ff7aa12ab951af3508398bb9b23fd\", \"flags\": \"proof-of-work\", \"modifier\": \"d2ec909dc48208a3a4d92162c14d116b48e27c7cb579f1c3cb4573e1b5c2d4ac\" }","title":"Network"},{"location":"rpc/#transactions","text":"This methods can be used to get information about transactions. getrawtransaction <hash> <verbose> - returns information about transaction (set verbose to true for json output) { \"txid\": \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\", \"hash\": \"49f3bbf10c853367aa597d96a0307e8cb7e0e3ddc6e3e668c141143056a48133\", \"version\": 1, \"timestamp\": 1589880735, \"size\": 149, \"vsize\": 149, \"locktime\": 0, \"vin\": [ { \"coinbase\": \"510101\", \"sequence\": 4294967295 } ], \"vout\": [ { \"value\": 2100000000, \"n\": 0, \"scriptPubKey\": { \"asm\": \"03131079e6248a288fcf9daf9828f09544e3f853e870afc651efdb0ca9298059ab OP_CHECKSIG\", \"hex\": \"2103131079e6248a288fcf9daf9828f09544e3f853e870afc651efdb0ca9298059abac\", \"reqSigs\": 1, \"type\": \"pubkey\", \"addresses\": [ \"KrbwDveomVrY4fNH5GrHU52A2HqpzgmCkG\" ] }, \"spentTxId\": \"df766dc83db4a93857cb3076bd043ea06138526e282744ad63a478eaa6bb0662\", \"spentIndex\": 0, \"spentHeight\": 12, \"valueSat\": 210000000000000000 }, { \"value\": 0, \"n\": 1, \"scriptPubKey\": { \"asm\": \"OP_RETURN aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf9\", \"hex\": \"6a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf9\", \"type\": \"nulldata\" }, \"valueSat\": 0 } ], \"hex\": \"010000009fa7c35e010000000000000000000000000000000000000000000000000000000000000000ffffffff03510101ffffffff020000d52ae311ea02232103131079e6248a288fcf9daf9828f09544e3f853e870afc651efdb0ca9298059abac0000000000000000266a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf900000000\", \"blockhash\": \"0012eb05991b2ee8d074fde6c03089d2517937e28adc4219f0a4742b7805be96\", \"height\": 1, \"confirmations\": 271841, \"time\": 1589880735, \"blocktime\": 1589880735 } getchaintxstats - returns statistics about the total number and rate of transactions in the chain { \"time\": 1608144544, \"txcount\": 1271608, \"window_block_count\": 40500, \"window_tx_count\": 246854, \"window_interval\": 2724352, \"txrate\": 0.09061017078556663 }","title":"Transactions"},{"location":"rpc/#wallet","text":"This methods can be used to get information about wallet. getbalance - returns entite AOK balance of your wallet 0.00000000 listmytokens - returns list of all tokens your wallet is holding { \"CCA\": 984.00000000 } getnewaddress <label> - returns new address and assign label if it was set KpmtABZnYx2qxJwu4wSmRSsEuJ6NwJFd5S listtransactions <label> <count> <skip> - returns list of last transactions for given label (use * to get list of all incoming transactions) [ { \"account\": \"testlabel\", \"token_type\": \"transfer_token\", \"token_name\": \"CCA\", \"amount\": 45.48900000, \"address\": \"KqFZpfbZ6kFFWqg22jv3cBES8o4KwCERmW\", \"vout\": 0, \"category\": \"receive\", \"blockhash\": \"3b816b7cb73c98ad22e4673f900eb2f6a9a0a15692227769ab3dc95d301f8ec4\", \"blockindex\": 2, \"blocktime\": 1607785696, \"txid\": \"cacf4bf3dcc43fbe6a76ff7d9f6b4625cda409538928cc9c89881305db95e5d5\", \"confirmations\": 5510, \"walletconflicts\": [ ], \"time\": 1607785660, \"timereceived\": 1607785660 }, { \"account\": \"testlabel\", \"token_type\": \"transfer_token\", \"token_name\": \"CCA\", \"amount\": 45.51290000, \"address\": \"KqFZpfbZ6kFFWqg22jv3cBES8o4KwCERmW\", \"vout\": 0, \"category\": \"receive\", \"blockhash\": \"22b5cebcae8a6c3fa3ccf4acd67293ae42b2273e606e97dd9d4be751afa9df9c\", \"blockindex\": 2, \"blocktime\": 1607879552, \"txid\": \"61f7fcea979aec1a9b8812f36e75589ea2b9d4f3ad168b4e1d2e9a00d6206796\", \"confirmations\": 4115, \"walletconflicts\": [ ], \"time\": 1607879552, \"timereceived\": 1607879552 }, { \"account\": \"testlabel\", \"token_type\": \"transfer_token\", \"token_name\": \"CCA\", \"amount\": 45.53510000, \"address\": \"KqFZpfbZ6kFFWqg22jv3cBES8o4KwCERmW\", \"vout\": 0, \"category\": \"receive\", \"blockhash\": \"e9f844b193a3e75eb60c95b5ab2db7eb51368307c6fa55cf859bd9a860c0505a\", \"blockindex\": 2, \"blocktime\": 1607964192, \"txid\": \"d16972d5f1b578e143e9cc93f33cefec8eb52926b588d14e425ba9dceef434a4\", \"confirmations\": 2854, \"walletconflicts\": [ ], \"time\": 1607964141, \"timereceived\": 1607964141 } ] sendtoaddress <address> <amount> <locktime> - sends specified amount of AOK to address with locktime (if it was set) d16972d5f1b578e143e9cc93f33cefec8eb52926b588d14e425ba9dceef434a4 sendmany \"*\" <recepients> - sends AOK to multiple recipients (second argument must be set to * ). Recepients is regular JSON object with address as a key and amount as value: {\"KWud4EpNGfSqecAdB3FH6x6wvNfVEL2iMn\": 10} [ \"cacf4bf3dcc43fbe6a76ff7d9f6b4625cda409538928cc9c89881305db95e5d5\" ] transfer <token> <amount> <address> <locktime> - sends specified amount of token to address with locktime (if it was set) [ \"7c9f23b4e8c4df8fa044e19cdadfb1be8cf9a1e38687b4e877978a9747f13780\" ] transfermany <token> <recepients> - sends token to multiple recipients (second argument must be set to * ). Recepients is regular JSON object with address as a key and amount as value: {\"KWud4EpNGfSqecAdB3FH6x6wvNfVEL2iMn\": 10} [ \"61f7fcea979aec1a9b8812f36e75589ea2b9d4f3ad168b4e1d2e9a00d6206796\" ]","title":"Wallet"},{"location":"rpc/#tokens","text":"This methods can be used to create/update tokens and get related token information. issue <name> <amount> <address> <change_address> <units> <reissuable> - issue token to address (if specified) [ \"94cac36a44021ee3e8cdf7365b34212e588679b927858453a714d4fa97df033a\" ] reissue <name> <amount> <address> <change_address> <reissuable> <units> - reissue token and/or update infromation about it (for example change number of units or reissuability) [ \"0bcd37b40b79608f582a0fb17666f5c639d79acf72e4d5ce25c3726b3f7fea33\" ] listtokens - returns list of all existing tokens [ \"CCA\" ] gettokendata <token> - returns information about tocken { \"name\": \"CCA\", \"amount\": 1000000000.00000000, \"units\": 8, \"reissuable\": 1 } listtokenbalancesbyaddress <address> - return all token balances for specified address { \"CCA\": 45731.24990000 } listaddressesbytoken <token> - returns list of addresses/balances which hold specified token { \"KWbLnN9J9wuPVzkqeTjzq9efRBSxTHJGh2\": 45731.24990000, \"KWhEy59XfADWu5LspUvN9KYbaggTb3thmr\": 5138.96400000, \"KWmyLEGXAxzHLNEuj8wTiXbCzLR4Uaon79\": 10277.92800000, \"KWqDW4apwJi6QsHN3q3h5LMXWw1LgtaWgz\": 3.01100000, \"KWqS79DH5SGqrNGjKVDfHQLGCsBxYKMp4j\": 25522.00000000, \"KWr1m9cry8yhjUzBLhNxbvQsmqc1u7TaWD\": 4079.46780000, \"KWrqLZGi82SJdVukvvcTfRpsmkpCx4fX4K\": 108874.53530000, \"KWswvLxmJJJCBNoVW3U7YNqLDNS7i9d6bx\": 3.00000000, \"KWtUYjQP8BBQwTFgJZebnxoiAqsF11DmXE\": 94700.49149998, \"KWud4EpNGfSqecAdB3FH6x6wvNfVEL2iMn\": 1.00000000, \"KWvmj3GNV4DE8Ms8yuKMGLHZDc88pr8Gzv\": 1000.00000000, \"KWvwTDCqFshmF1Xnqo1yj29TG8GQwyUHg4\": 27703.98720000, \"KWwA5otMB4qCzvFiERcBFj6JdaZ2Vvykv7\": 1000000.00000000, \"KWwKUUoZUw2DbXu7NWfXKySkSUa9WnRqR6\": 12801.75300000, \"KWwufjbDrozt6n5up1vSchveokeoXV9L82\": 221074.64239996, \"KWxemToRTChASMY85KSS8rfHHn4YnuEpbJ\": 8811.66599998, \"KWxrS24CN53HUkGHzZUybHnqC8hzfBH562\": 11.88460509, \"KWzEAcXbh2nqBSjSrV3dYFWATrTxvAGcBh\": 14.00000000, \"KX6LWrCX28etVmwdTaWX6X7J8pxBqLgF3u\": 38128.91369999, \"KX6SfVXJMHSF6e3xrzcGkcpSdu9ETBZtzr\": 127377.29239999, \"KX7BYLcxQpt3CANC3KPL8FaLCRDFDQRdCD\": 27979.77800000, ... }","title":"Tokens"},{"location":"staking/","text":"Staking guide","title":"Staking guide"},{"location":"staking/#staking-guide","text":"","title":"Staking guide"}]}